// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using challeangeLec18;

#nullable disable

namespace challeangeLec18.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("challeangeLec18.classes.Employee", b =>
                {
                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Position", "Name");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("challeangeLec18.classes.Enroll", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("coursId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "coursId");

                    b.HasIndex("coursId");

                    b.ToTable("Enrolls");
                });

            modelBuilder.Entity("challeangeLec18.classes.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("challeangeLec18.classes.cours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("challeangeLec18.classes.officer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("specialtyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("specialtyId");

                    b.ToTable("Officers");
                });

            modelBuilder.Entity("challeangeLec18.classes.specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OfficerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("challeangeLec18.classes.Enroll", b =>
                {
                    b.HasOne("challeangeLec18.classes.Student", "student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("challeangeLec18.classes.cours", "cours")
                        .WithMany()
                        .HasForeignKey("coursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cours");

                    b.Navigation("student");
                });

            modelBuilder.Entity("challeangeLec18.classes.officer", b =>
                {
                    b.HasOne("challeangeLec18.classes.specialty", "Specialty")
                        .WithMany("Officers")
                        .HasForeignKey("specialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("challeangeLec18.classes.specialty", b =>
                {
                    b.Navigation("Officers");
                });
#pragma warning restore 612, 618
        }
    }
}
